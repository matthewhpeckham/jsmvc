define("MainApp",["MainCtrl","ProductCtrl"],function(t,e){"use strict";var r=function(r,o,i){var u=this;this.config=r,this.controllers=[],this.init=function(){this.debug("app.js: init()");var r=new i,u=new t,a=new e;u.init(o,r,this.onControllerReady),a.init(o,r),this.controllers.count=0,this.controllers.mainCtrl=u,this.controllers.productCtrl=a},this.onControllerReady=function(){u.config.router.navigate()},this.loadController=function(t,e){this.controllers[t].render(e)},this.debug=function(t,e){r.debugMode===!0&&("undefined"!=typeof e?console.log(t,e):console.log(t))}};return r}),define("Config",["Router"],function(t){"use strict";var e={version:8,debugMode:!1,serviceUrl:"http://www.bestbuy.ca/api/v2/json/",rootDataParam:"departments",router:new t({"/":"productCtrl","categories/:category-id":"productCtrl","product/:product-id":"productDetailCtrl"},{routeMode:"html5"})},r=require("handlebars").default;return r.registerHelper("list",function(t,e){var r="",o=0,i=t.length;for(i;o<i;o+=1)t[o].cleanName=t[o].name.replace(/\s+/g,"-").toLowerCase().replace(/[,\s]+/g,""),t[o].urlSetting=e.data.root.urlSetting,r+=e.fn(t[o]);return r}),e}),define("DataService",[],function(){"use strict";function t(){this.init()}return t.prototype.init=function(){app.debug("dataService.js: init()")},t.prototype.getDepartments=function(t){app.debug("dataService.js: getDepartments()"),this.callService(app.config.serviceUrl+"category/Departments","jsonp",t)},t.prototype.getProducts=function(t,e){app.debug("dataService.js: getProducts()"),this.callService(app.config.serviceUrl+"search?categoryid="+e,"jsonp",t,e)},t.prototype.getProductDetails=function(t,e,r){app.debug("dataService.js: getProductDetails()"),this.callService(app.config.serviceUrl+"product/"+e,"jsonp",t,r)},t.prototype.callService=function(t,e,r,o){app.debug("dataService.js: callService(): categoryId: "+o),$.ajax({url:t,dataType:e,success:function(t){return"undefined"!=typeof o&&(t.categoryId=o[0]),r(t)},error:function(t,e,o){return r(e)}})},t}),define("MainCtrl",[],function(){"use strict";var t=function(){var t=this;this.init=function(t,e,r){app.debug("mainController: init()",e),this.dataService=e,this.templates=t,this.callback=r,this.render()},this.greet=function(t){return"undefined"!=typeof t?"Hello "+t+"!":"Hello World!"},this.render=function(){this.dataService.getDepartments(this.onDepartmentsLoaded)},this.onDepartmentsLoaded=function(e){app.debug("MainController: onDepartmentsLoaded()",e),t.renderCategories(e)},this.renderCategories=function(t){app.debug("app.js: renderCategories()",t),app.debug("app.config.router.routeMode: ",app.config.router.routeMode);var e="html5"===app.config.router.routeMode?"/":"/#",r=this.templates.categoryListing({data:t.subCategories,urlSetting:e});document.getElementById("categories").innerHTML=r,jQuery("#categories ul li a").click(function(t){var e={id:jQuery(this).attr("href").substring(1),pageTitle:"Category ID - "+jQuery(this).attr("href"),href:jQuery(this).attr("href"),dataid:jQuery(this).attr("data-id")};return app.config.router.navigate(e),!1}),this.callback&&(this.callback(),delete this.callback)}};return t}),define("ProductCtrl",["ProductModel","ProductDetailCtrl"],function(t,e){"use strict";var r=function(){var r=this;this.init=function(r,o){app.debug("productController: init()"),this.dataService=o,this.templates=r,this.productModel=new t,app.controllers.productDetailCtrl=new e(this.templates,this.productModel,this.dataService)},this.render=function(t){app.debug("productController.js: render(): args: ",t),jQuery("#categories ul li a").removeClass("active"),jQuery('#categories ul li a[data-id="'+t[0]+'"]').addClass("active"),jQuery("ul#product-list-"+t[0]).length>0?this.toggleProductListings(t[0]):this.dataService.getProducts(this.onProductsLoaded,t)},this.onProductsLoaded=function(t){app.debug("app.js: onProductsLoaded(): data: ",t),r.renderProducts(t)},this.renderProducts=function(t){app.debug("productController.js: renderProducts(): data: ",t);var e="html5"===app.config.router.routeMode?"/":"/#",r=this.templates.productListing({data:t.products,id:t.categoryId,urlSetting:e}),o=this.toggleProductListings(t.categoryId);return o!==!0&&(document.getElementById("products").innerHTML=r,jQuery("ul#product-list-"+t.categoryId).addClass("active"),void jQuery("ul.product-listing li a").click(function(t){var e={id:jQuery(this).attr("href").substring(1),pageTitle:"Category ID - "+jQuery(this).attr("href"),href:jQuery(this).attr("href"),dataid:jQuery(this).attr("data-id")};return app.debug("productController.js: renderProducts(): data: ",e),app.config.router.navigate(e,!0),!1}))},this.onProductDetailsLoaded=function(t){app.debug("productController.js: onProductDetailsLoaded(): product details",t),app.debug(r.productModel);var e={id:t.sku,thumbnailImage:t.thumbnailImage,name:t.name,description:t.shortDescription};r.productModel.set(e),r.renderProductDetails(e)},this.renderProductDetails=function(t){app.debug("productController.js: renderProductDetails()",t);var e,r=[];r.push(t),e=this.templates.productDetails({data:r}),document.getElementById("product-details").innerHTML=e,jQuery("#product-modal button#close").click(function(t){return jQuery("#product-modal").removeClass("active"),!1}),jQuery("#product-modal").addClass("active")},this.toggleProductListings=function(t){return jQuery("ul.product-listing").removeClass("active"),jQuery("ul#product-list-"+t).length>0&&(jQuery("ul#product-list-"+t).addClass("active"),!0)}};return r}),define("ProductDetailCtrl",[],function(){"use strict";var t=function(t,e,r){var o=this;this.productModel=e,this.dataService=r,this.templates=t,this.init=function(t,e){app.debug("productDetailController: init()")},this.render=function(t){app.debug("productDetailController.js: render(): ",t);var e=o.productModel.get(t[0]);null!==e?(app.debug("productDetailController.js: product click event: product from model: ",e),o.renderProductDetails(e)):o.dataService.getProductDetails(o.onProductDetailsLoaded,t[0])},this.onProductDetailsLoaded=function(t){app.debug("productDetailController.js: onProductDetailsLoaded(): product details: ",t),app.debug(o.productModel);var e={id:t.sku,associatedCategoryId:"undefined"!=typeof t.categoryId?t.categoryId:null,thumbnailImage:t.thumbnailImage,name:t.name,description:t.shortDescription};o.productModel.set(e),o.renderProductDetails(e)},this.renderProductDetails=function(t){app.debug("productDetailController.js: renderProductDetails()",t);var e,r=[];r.push(t),e=this.templates.productDetails({data:r}),document.getElementById("product-details").innerHTML=e,jQuery("#product-modal button#close").click(function(t){return jQuery("#product-modal").removeClass("active"),"undefined"!=typeof app.config.router.previousRoute&&"undefined"!=typeof app.config.router.previousRoute.routeURL?(app.debug("productDetailController.js: close button click: ",app.config.router.previousRoute.routeURL),app.config.router.goTo(app.config.router.previousRoute.routeURL)):app.config.router.goTo("/"),!1}),jQuery("#product-modal").addClass("active")}};return t}),define("ProductModel",[],function(){"use strict";var t=function(){this.data=[];this.set=function(t){this.data[t.id]=t},this.get=function(t){return"undefined"!=typeof this.data[t]?this.data[t]:null}};return t}),define("Router",[],function(){"use strict";var t=function(t,e){var r=this;this.matchWord=/^[a-zA-Z\-]+$/,this.matchExpression=/:(.*?\/)/g,this.routes=t,this.routeMode="undefined"!=typeof e&&null!==e.routeMode?e.routeMode:"hash",this.previousRoute="",this.getCleansedRoutes=function(){var e,o,i,u=0,a={};for(u in t)t.hasOwnProperty(u)&&(e=t[u],u="/"!==u?u+"/":u,o=u.replace(this.matchExpression,":id/"),i=u.match(this.matchExpression),a[o]=e,r.routes=a);return r.routes},this.init=function(){console.log("router.js: init()"),this.isPushStateAvailable()===!1&&(this.routeMode="hash"),this.getCleansedRoutes()},this.getRoute=function(t){return app.debug("router.js: getRoute(): this.routeMode: ",this.routeMode),this.isPushStateAvailable()===!0&&"html5"===this.routeMode?decodeURI(window.location.pathname.slice(1)):"undefined"!=typeof t?t.substr(2):decodeURI(location.hash.slice(1))},this.goTo=function(t){app.debug("router.js: goTo: route: "+t),app.debug("router.js: goTo: this.routeMode: "+this.routeMode);var e;e=t.length>1?"/"+t:"/",this.isPushStateAvailable()===!0&&"html5"===this.routeMode?window.history.pushState({id:0,pageTitle:""},"",e):(e="/"!==e?e.substr(1):e,window.location.href="/"===e?e+"#":e),this.navigate()},this.navigate=function(t,e){app.debug("router.js: navigate(): data:",t),app.debug("router.js: navigate(): ",this.previousRoute),"undefined"!=typeof t?(this.isPushStateAvailable()===!0?window.history.pushState({id:t.id,pageTitle:t.pageTitle},"",t.href):window.location.href=t.href,this.currentRoute=this.getRoute(t.href)):(this.currentRoute=this.getRoute(),this.isPushStateAvailable()===!0&&"html5"===this.routeMode&&window.history.replaceState({id:this.currentRoute||"/",href:this.previousRoute.data,pageTitle:""+this.currentRoute},"","/"+this.currentRoute)),app.debug("router.js: navigate(): this.currentRoute: ",this.currentRoute);var r,o,i,u,a,n=this.currentRoute.split("/").filter(function(t){return 0!==t.length}),s=n.length,d=s>0?n[0].match(this.matchWord):null,c=this,l=0,p=[];if(null!==d){for(app.debug("router.js: keyword: "+d),app.debug("router,js: temp: ",n),l;l<s;l+=1)app.debug("router.js: args array: ",n[l]),n[l]!==d[0]&&(o=n[l].replace(c.cleanse,""),i="undefined"!=typeof e&&e===!0?t.dataid:jQuery("#"+n[0]+' ul li a[data-name="'+n[l]+'"]').attr("data-id"),"undefined"!=typeof i?p.push(i):p.push(o),r=o.replace(o,":id/"),u=c.currentRoute,c.currentRoute=c.currentRoute.replace(n[l],r));a=this.previousRoute.data||this.previousRoute.routeURL,this.previousRoute={routeURL:a,data:"html5"===this.routeMode?u:"/#"+u,route:this.currentRoute},this.loadController(p)}else app.debug("router.js: Root or bad route"),a=this.previousRoute.data,this.previousRoute={routeURL:"/",data:null,route:this.currentRoute},this.goToRoot()},this.loadController=function(t){app.debug("router.js: this.currentRoute: ",this.currentRoute),app.debug("router.js: args: ",t),t.length>0&&"undefined"!=typeof this.routes[this.currentRoute]?(app.debug("router.js: loadController(): we have args: ",t),app.debug("router.js: loadController(): routes object: ",this.routes),app.debug("router.js: loadController(): route: ",this.currentRoute),app.debug("router.js: loadController(): controller: ",this.routes[this.currentRoute]),app.loadController(this.routes[this.currentRoute],t)):(app.debug("router.js: loadController(): No route available"),r.goToRoot())},this.goToRoot=function(){app.debug("router.js: goToRoot()"),this.currentRoute="/",this.isPushStateAvailable()===!0&&window.history.pushState({pageTitle:"All Departments"},"","/"),app.loadController(this.routes[this.currentRoute],app.config.rootDataParam)},this.isPushStateAvailable=function(){return!("undefined"==typeof window||!window.history||!window.history.pushState)},this.init()};return t});